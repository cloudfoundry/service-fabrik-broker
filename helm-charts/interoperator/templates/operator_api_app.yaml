{{ if .Values.operator_apis.enabled -}}
{{ $randomString := randAlphaNum 5 | quote -}}
apiVersion: v1
kind: Service
metadata:
  labels:
    service: {{ .Release.Name }}-op-apis-service
  name: {{ .Release.Name }}-op-apis-service
  namespace: {{ .Release.Namespace }}
spec:
  type: {{ .Values.operator_apis.service.type }}
  ports:
  - name: http
    port: 80
    targetPort: op-apis-port
  - name: https
    port: 443
    targetPort: op-apis-port
  selector:
    app: {{ .Release.Name }}-op-apis-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    service: {{ .Release.Name }}-op-apis-service
    {{- if .Values.cluster.ssl }}
    garden.sapcloud.io/purpose: managed-cert
    {{- end }}
  name: {{ .Release.Name }}-op-apis-service-ingress
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{ .Values.operator_apis.host | default (nospace (cat "op.ingress" (split "ingress" .Values.cluster.host)._1)) }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}-op-apis-service
            port:
              number: 80
        pathType: ImplementationSpecific
  {{- if .Values.operator_apis.ssl }} 
  tls:
  - hosts:
    - {{ .Values.operator_apis.host | default (nospace (cat "op.ingress" (split "ingress" .Values.cluster.host)._1)) }}
    secretName: {{ .Values.operator_apis.sslsecret }}
  {{- end }} 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-op-apis-app
  labels:
    app: {{ .Release.Name }}-op-apis-app
spec:
  replicas: {{ default .Values.replicaCount .Values.operator_apis.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-op-apis-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-op-apis-app
        rollme: {{ $randomString }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: {{ .Release.Name }}-op-apis-app
            rollme: {{ $randomString }}
      containers:
      - name: operator-api
        image: "{{ .Values.operator_apis.image.repository }}:{{ .Values.operator_apis.image.tag }}"
        imagePullPolicy: {{ .Values.operator_apis.image.pullPolicy }}
        ports:
        - name: op-apis-port
          containerPort: {{ .Values.operator_apis.port }}
          protocol: TCP
        env:
        - name: OPERATOR_APIS_APP_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-creds
              key: operator_apis_username
        - name: OPERATOR_APIS_APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-creds
              key: operator_apis_password
        - name: OPERATOR_APIS_APP_PORT
          value: "{{ .Values.operator_apis.port }}"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .Values.operator_apis.port }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .Values.operator_apis.port }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        command: 
        - /operator-apis
        {{- $resourceSpec := dict }}
        {{- with .Values.operator_apis.resources }}
          {{- $resourceSpec = deepCopy . }}
        {{- end }}
        {{- if not (empty $resourceSpec) }}
        {{- tpl (.Files.Get "conf/resources.yaml") (merge $resourceSpec .) | nindent 8 }}
        {{- end }}
      restartPolicy: Always
{{- end }}