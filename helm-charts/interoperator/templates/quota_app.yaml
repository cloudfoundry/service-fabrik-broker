{{ if .Values.broker.quota.enabled -}}
{{ $randomString := randAlphaNum 5 | quote -}}
apiVersion: v1
kind: Service
metadata:
  labels:
    service: {{ .Release.Name }}-quota
  name: {{ .Release.Name }}-quota-service
  namespace: {{ .Release.Namespace }}
spec:
  type: {{ .Values.quota_app.service.type }}
  ports:
  - name: http
    port: 80
    targetPort: quota-app-port
  selector:
    app: {{ .Release.Name }}-quota-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-quota-app
  labels:
    app: {{ .Release.Name }}-quota-app
spec:
  replicas: {{ default .Values.replicaCount .Values.quota_app.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-quota-app
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-quota-app
        rollme: {{ $randomString }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app: {{ .Release.Name }}-quota-app
            rollme: {{ $randomString }}
      containers:
      - name: quota-app
        image: "{{ .Values.broker.image.repository }}:{{ .Values.broker.image.tag }}"
        imagePullPolicy: {{ .Values.broker.image.pullPolicy }}
        ports:
        - name: quota-app-port
          containerPort: {{ .Values.quota_app.port }}
          protocol: TCP
        env:
        - name: NODE_ENV
          value: kubernetes
        - name: SETTINGS_PATH
          value: /opt/sf-config/settings.yml
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: QUOTA_APP_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-creds
              key: quota_app_username
        - name: QUOTA_APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-creds
              key: quota_app_password
        {{- if .Values.broker.quota.username }}
        - name: QUOTA_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-creds
              key: quota_username
        {{- end }}
        {{- if .Values.broker.quota.password }}
        - name: QUOTA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-creds
              key: quota_password
        {{- end }}
        volumeMounts:
        {{- if not (empty .Values.broker.quota.mtls.cert_secret) }}
        - name: 'cert-secret'
          mountPath: '/etc/certs'
        {{- end }}
        - name: settings
          mountPath: /opt/sf-config
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .Values.quota_app.port }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: {{ .Values.quota_app.port }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        args:
        - applications/quota-app/src/index.js
        command:
        - node
        {{- $resourceSpec := dict }}
        {{- with .Values.quota_app.resources }}
          {{- $resourceSpec = deepCopy . }}
        {{- end }}
        {{- if not (empty $resourceSpec) }}
        {{- tpl (.Files.Get "conf/resources.yaml") (merge $resourceSpec .) | nindent 8 }}
        {{- end }}
      volumes:
        - name: settings
          configMap:
            name: sf-settings-config
        {{- if not (empty .Values.broker.quota.mtls.cert_secret) }}
        - name: 'cert-secret'
          secret:
            secretName: {{ .Values.broker.quota.mtls.cert_secret }}
        {{- end }}
      restartPolicy: Always
---
{{- if .Values.quota_app.hpa.enabled }}
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-quota-app
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-quota-app
  minReplicas: {{ default .Values.replicaCount .Values.quota_app.replicaCount }}
  maxReplicas: {{ .Values.quota_app.hpa.maxReplicas }}
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.quota_app.hpa.cpu_threshold }}
  behavior:
    scaleUp:
      selectPolicy: {{ .Values.quota_app.hpa.scaleUp.selectPolicy }}
      stabilizationWindowSeconds: {{ .Values.quota_app.hpa.scaleUp.stabilizationWindowSeconds }}
      policies:
        - type: Percent
          value: {{ .Values.quota_app.hpa.scaleUp.policies.percent.value }}
          periodSeconds: {{ .Values.quota_app.hpa.scaleUp.policies.percent.periodSeconds }}
        - type: Pods
          value: {{ .Values.quota_app.hpa.scaleUp.policies.pods.value }}
          periodSeconds: {{ .Values.quota_app.hpa.scaleUp.policies.pods.periodSeconds }}
    scaleDown:
      selectPolicy: {{ .Values.quota_app.hpa.scaleDown.selectPolicy }}
      stabilizationWindowSeconds: {{ .Values.quota_app.hpa.scaleDown.stabilizationWindowSeconds }}
      policies:
        - type: Percent
          value: {{ .Values.quota_app.hpa.scaleDown.policies.percent.value }}
          periodSeconds: {{ .Values.quota_app.hpa.scaleDown.policies.percent.periodSeconds }}
{{- end }}
{{- end }}